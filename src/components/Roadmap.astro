---
import { Icon } from 'astro-icon/components'
import { M } from '../../dist/_astro/Icon.-jUYKkDC'

const steps = [
  {
    title: 'Model Customization',
    description:
      '🛠️ OpenLocalUI provides users with a robust set of customization tools, including a system prompt editor and a comprehensive range of Ollama parameters. ✨ Create, save, and share custom model profiles to tailor language models to your needs.',
    icon: 'mdi:settings',
    status: 'done'
  },
  {
    title: 'Multimedia Embedding',
    description:
      '🖼️ Embed images (for compatible models) and files directly within the text generation process. 📂 Upload media from your file system or drag and drop from any source to seamlessly integrate with the app.',
    icon: 'mdi:document',
    status: 'done'
  },
  {
    title: 'Enhanced Search Integration',
    description:
      '🔍 Integrating search engines and OS file systems to enrich model outputs with search results. 📄 Users can leverage their files to perform Retrieval-Augmented Generation (RAG), enhancing responses with real-time data.',
    icon: 'mdi:search',
    status: 'in-progress'
  },
  {
    title: 'Seamless Workflow Integration',
    description:
      "🔄 Building a suite of integrations to enhance OpenLocalUI's interaction with your operating system. 🧩 Construct custom data pipelines for efficient asset access and management with minimal friction.",
    icon: 'mdi:workflow',
    status: 'in-progress'
  },
  {
    title: 'Voice Interaction (TTS & STT)',
    description:
      '🎙️ Integrating Text-to-Speech (TTS) and Speech-to-Text (STT) to enable voice interactions with language models. 🗣️ Users will be able to issue voice commands and receive audio responses, enhancing accessibility.',
    icon: 'mdi:microphone',
    status: 'in-progress'
  },
  {
    title: 'Model Database & Management',
    description:
      '📚 Explore and install a diverse range of Ollama-compatible models from sources like the official Ollama Library, Hugging Face, GitHub, and more. 🔒 Upcoming authentication features will allow users to upload their own models to the database.',
    icon: 'mdi:database',
    status: 'done'
  },
  {
    title: 'Advanced Server Configuration',
    description:
      '🖥️ Future updates will include comprehensive server capabilities, allowing OpenLocalUI to host and manage language models. 🌐 This feature will enable remote access and centralized control, ensuring scalability and flexibility in deployment.',
    icon: 'mdi:server',
    status: 'planned'
  },
  {
    title: 'Building an Open Ecosystem',
    description:
      '🌍 The integration of these features sets the stage for a collaborative ecosystem based on our public server API. 🤝 We aim to support open-source, privacy-focused applications that leverage self-hosted LLMs, driving innovation within the community.',
    icon: 'mdi:earth',
    status: 'planned'
  },
  {
    title: 'LLM Lab',
    description:
      '🧪 Proposing the development of an LLM Lab feature, where users can benchmark different models, compare performance, and fine-tune parameters in a controlled environment. 🔍 This will offer greater flexibility and insights for model optimization.',
    icon: 'mdi:flask',
    status: 'proposal'
  }
]
---

<section id='roadmap' class='py-20 '>
  <div class='container mx-auto px-6'>
    <h2 class='text-3xl md:text-4xl font-bold text-center mb-12' data-aos='fade-up'>
      Roadmap
    </h2>
    <p class='text-center text-gray-300 mb-8' data-aos='fade-up' data-aos-delay='100'>
      Follow our journey as we continue to build and improve OpenLocalUI. Here are the current milestones:
    </p>
    <div class='grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3'>
      {
        steps.map((step) => (
          <div
            data-aos='fade-up'
            data-aos-delay={steps.indexOf(step) * 150}
            class='relative p-6 bg-gradient-to-br from-gray-800 via-stone-900 to-gray-700 bg-opacity-10 backdrop-blur-lg border border-gray-100 border-opacity-20 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105'
          >
            <!-- Step Number and Icon -->
            <div class='flex justify-between items-center mb-4'>
              <div class='w-16 h-16 rounded-full bg-gradient-to-br from-yellow-300 via-orange-500 to-purple-500 flex items-center justify-center'>
                <Icon class='w-8 h-8 text-white' name={step.icon} />
              </div>
              <!-- Status Icon & Label -->
              <div class='flex items-center'>
                <Icon
                  class={
                    `text-${step.status === 'done' ? 'green' : step.status === 'in-progress' ? 'yellow' : 'purple'}-400 w-6 h-6 mr-2`
                  }
                  name={
                    step.status === 'done'
                      ? 'mdi:check-circle'
                      : step.status === 'in-progress'
                        ? 'mdi:progress-clock'
                        : step.status === 'proposal'
                          ? 'mdi:lightbulb-outline'
                          : 'mdi:circle-outline'
                  }
                />
                <span class={`text-sm font-semibold text-${step.status === 'done' ? 'green' : step.status === 'in-progress' ? 'yellow' : 'purple'}-400`}>
                  {step.status}
                </span>
              </div>
            </div>
            
            <!-- Step Title & Description -->
            <h3 class='text-xl font-semibold mb-2 text-white'>
              {steps.indexOf(step) + 1 + '. ' + step.title}
            </h3>
            <p class='text-gray-300 text-justify'>
              {step.description}
            </p>
          </div>
        ))
      }
    </div>
  </div>
</section>
